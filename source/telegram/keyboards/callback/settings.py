from aiogram import F, Router, types
from aiogram.types import Message, CallbackQuery, ReplyKeyboardRemove

from source.db import get_user, clear_user, update_notice

import source.telegram.keyboards.inline as kb

from source.telegram.filters import AuthFilterCallback

import asyncio


settings_callback = Router()


@settings_callback.callback_query(F.data == "logout")
async def logout(callback: CallbackQuery):
    await callback.answer("")

    await clear_user(callback.from_user.id)

    await callback.message.edit_text(text=f"<b>–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞!</b>")

    msg = await callback.message.answer(text=f"–í–∞—à–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∏!", reply_markup=types.ReplyKeyboardRemove())

    await msg.delete()


@settings_callback.callback_query(F.data == "settings_back", AuthFilterCallback(auth=True))
async def settings_back(callback: CallbackQuery):
    await callback.answer("")

    user = await get_user(callback.from_user.id)

    if user.role is None:
        user.role = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

    elif user.name is None:
        user.name = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

    elif user.surname is None:
        user.surname = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

    elif user.clas is None:
        user.clas = "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"

    await callback.message.edit_text(
        text=f"<b>‚îè‚î´‚òÖ –ü–†–û–§–ò–õ–¨:</b>\n\n<b>üë§ ‚Ä¢ –ù–∏–∫–Ω–µ–π–º:</b>   <code>{callback.from_user.full_name}</code>\n<b>üîë ‚Ä¢ ID:</b>   <code>{callback.from_user.id}</code>\n<b>‚ö°Ô∏è ‚Ä¢ –°—Ç–∞—Ç—É—Å:</b>   <code>{user.role}</code>\n<b>üé´ ‚Ä¢ –ò–º—è:</b>   <code>{user.name}</code>\n<b>üé´ ‚Ä¢ –§–∞–º–∏–ª–∏—è:</b>   <code>{user.surname}</code>\n<b>üè´ ‚Ä¢ –®–∫–æ–ª–∞:</b>   <code>–ú–ë–û–£ –°–û–® ‚Ññ 99 –≥. –ß–µ–ª—è–±–∏–Ω—Å–∫–∞</code>\n<b>üß∞ ‚Ä¢ –ö–ª–∞—Å—Å:</b>   <code>{user.clas}</code>"
        , reply_markup=kb.settings_menu)


@settings_callback.callback_query(F.data == "settings", AuthFilterCallback(auth=True))
async def settings(callback: CallbackQuery):
    await callback.answer("")

    change_settings_menu = await kb.create_change_settings_menu(callback.from_user.id)

    await callback.message.edit_text(
        text="<b>‚îè‚î´‚òÖ –ù–ê–°–¢–†–û–ô–ö–ò:</b>\n\n<b>üîî ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>\n‚îó‚î´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏—è—Ö.\n‚îó‚î´–ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ —Å–æ–±—ã—Ç–∏–π.\n‚îó‚î´–£–∑–Ω–∞–≤–∞–π—Ç–µ –æ –Ω–æ–≤–æ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏.\n\n<b>üîê ‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n‚îó‚î´–ú–æ–∂–µ—Ç–µ —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å.\n‚îó‚î´–ú–æ–∂–µ—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏–Ω."
        , reply_markup=change_settings_menu
    )


@settings_callback.callback_query(F.data == "settings_notification_overdue_assignments", AuthFilterCallback(auth=True))
async def settings_menu(callback: CallbackQuery):
    await callback.answer("")

    await update_notice(callback.from_user.id, "notice_overdue_assigment")

    user = await get_user(callback.from_user.id)

    notice_overdue_assigment = "–≤–∫–ª—é—á–∏–ª–∏" if user.notice_overdue_assigment else "–≤—ã–∫–ª—é—á–∏–ª–∏"

    change_settings_menu = await kb.create_change_settings_menu(callback.from_user.id)

    await callback.message.edit_text(
        text=f"<b>‚îè‚î´‚òÖ –ù–ê–°–¢–†–û–ô–ö–ò:</b>\n\n<b>üîî ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>\n‚îó‚î´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏—è—Ö.\n‚îó‚î´–ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ —Å–æ–±—ã—Ç–∏–π.\n‚îó‚î´–£–∑–Ω–∞–≤–∞–π—Ç–µ –æ –Ω–æ–≤–æ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏.\n\n<b>üîê ‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n‚îó‚î´–ú–æ–∂–µ—Ç–µ —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å.\n‚îó‚î´–ú–æ–∂–µ—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏–Ω.\n\nüíæ ‚Ä¢ <i>–í—ã —É—Å–ø–µ—à–Ω–æ {notice_overdue_assigment} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è '–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è'</i>"
        , reply_markup=change_settings_menu
    )


@settings_callback.callback_query(F.data == "settings_notification_announcement", AuthFilterCallback(auth=True))
async def settings_menu(callback: CallbackQuery):
    await callback.answer("")

    await update_notice(callback.from_user.id, "notice_announcement")

    user = await get_user(callback.from_user.id)

    notice_announcement = "–≤–∫–ª—é—á–∏–ª–∏" if user.notice_announcement else "–≤—ã–∫–ª—é—á–∏–ª–∏"

    change_settings_menu = await kb.create_change_settings_menu(callback.from_user.id)

    await callback.message.edit_text(
        text=f"<b>‚îè‚î´‚òÖ –ù–ê–°–¢–†–û–ô–ö–ò:</b>\n\n<b>üîî ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>\n‚îó‚î´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏—è—Ö.\n‚îó‚î´–ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ —Å–æ–±—ã—Ç–∏–π.\n‚îó‚î´–£–∑–Ω–∞–≤–∞–π—Ç–µ –æ –Ω–æ–≤–æ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏.\n\n<b>üîê ‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n‚îó‚î´–ú–æ–∂–µ—Ç–µ —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å.\n‚îó‚î´–ú–æ–∂–µ—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏–Ω.\n\nüíæ ‚Ä¢ <i>–í—ã —É—Å–ø–µ—à–Ω–æ {notice_announcement} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è '–°–æ–±—ã—Ç–∏—è'</i>"
        , reply_markup=change_settings_menu
    )


@settings_callback.callback_query(F.data == "settings_notification_timetable", AuthFilterCallback(auth=True))
async def settings_menu(callback: CallbackQuery):
    await callback.answer("")

    await update_notice(callback.from_user.id, "notice_timetable")

    user = await get_user(callback.from_user.id)

    notice_timetable = "–≤–∫–ª—é—á–∏–ª–∏" if user.notice_timetable else "–≤—ã–∫–ª—é—á–∏–ª–∏"

    change_settings_menu = await kb.create_change_settings_menu(callback.from_user.id)

    await callback.message.edit_text(
        text=f"<b>‚îè‚î´‚òÖ –ù–ê–°–¢–†–û–ô–ö–ò:</b>\n\n<b>üîî ‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è:</b>\n‚îó‚î´–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏—è—Ö.\n‚îó‚î´–ë—É–¥—å—Ç–µ –≤ –∫—É—Ä—Å–µ —Å–æ–±—ã—Ç–∏–π.\n‚îó‚î´–£–∑–Ω–∞–≤–∞–π—Ç–µ –æ –Ω–æ–≤–æ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏.\n\n<b>üîê ‚Ä¢ –ò–∑–º–µ–Ω–∏—Ç–µ —Å–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ:</b>\n‚îó‚î´–ú–æ–∂–µ—Ç–µ —Å–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å.\n‚îó‚î´–ú–æ–∂–µ—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å –ª–æ–≥–∏–Ω.\n\nüíæ ‚Ä¢ <i>–í—ã —É—Å–ø–µ—à–Ω–æ {notice_timetable} —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è '–ù–æ–≤–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'</i>"
        , reply_markup=change_settings_menu
    )
