from aiogram.filters import Filter
from aiogram import types
from aiogram.fsm.context import FSMContext

from source.misc import get_keys
from source.db import get_user, set_user
from source.telegram.keyboards.inline import policy, auth


class AuthFilterMessage(Filter):
    def __init__(self, auth: bool) -> None:
        self.auth = auth

    async def __call__(self, message: types.Message, state: FSMContext) -> bool:

        user_id = message.from_user.id

        await set_user(user_id)

        user = await get_user(user_id)

        if user.role in ["admin", "parent", "teacher", "student"]:

            return True == self.auth

        else:
            if user.privacy_policy == 0:

                await message.answer(
                    f"üëã –ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.full_name}</b>! \n\nü§ñ <b>–°–µ—Ç–µ–≤–æ–π –ì–æ—Ä–æ–¥ Helper</b> - –Ω–µ–∫–æ–º–º–µ—Ä—á–µ—Å–∫–∏–π –ø—Ä–æ–µ–∫—Ç, —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π –¥–ª—è –ø–æ–º–æ—â–∏ –≤ —É—á–µ–±–µ. \n\n<b>‚öôÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>\n‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –ø—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞–Ω–∏—è—Ö\n‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–æ–≤–æ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏\n‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–æ–º–∞—à–Ω–µ–≥–æ –∑–∞–¥–∞–Ω–∏—è\n‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∫–∞–Ω–∏–∫—É–ª –∏ –∑–≤–æ–Ω–∫–æ–≤\n‚Ä¢ –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –æ—Ü–µ–Ω–æ–∫\n‚Ä¢ –û—Ç—á–µ—Ç –æ–± –æ—Ü–µ–Ω–∫–∞—Ö\n\n‚õîÔ∏è –î–∞–Ω–Ω—ã–π –ø—Ä–æ–µ–∫—Ç <b>–Ω–µ –∏–º–µ–µ—Ç</b> –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ <b>¬´–ò—Ä–¢–µ—Ö—É¬ª</b>\n\n<b><i>‚ö†Ô∏è –ß—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –≤–∞–º –Ω—É–∂–Ω–æ –ø—Ä–∏–Ω—è—Ç—å <u>–ø–æ–ª–∏—Ç–∏–∫—É –∫–æ–Ω—Ñ–µ–¥–∏—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏</u></i></b>",
                    reply_markup=policy
                )

            else:
                await message.answer(
                    f"–ß—Ç–æ –±—ã –Ω–∞—á–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, <b>–∞–≤—Ç–æ—Ä–∏–∑—É–π—Ç–µ—Å—å</b> –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!",
                    reply_markup=auth
                )


